{"version":3,"sources":["utils/API.js","components/EmployeeList.js","App.js","index.js"],"names":["axios","get","EmployeeList","state","employees","orderBool","getEmployees","API","then","res","console","log","setState","data","results","sortEmployeesName","catch","err","sort","a","b","name","first","sortEmployeesPhone","sortEmployeesEmail","this","Container","style","backgroundColor","Row","textAlign","paddingTop","Col","onClick","map","employee","src","picture","thumbnail","alt","cell","email","React","Component","App","color","lineHeight","ReactDOM","render","document","getElementById"],"mappings":"mQAKe,EACR,WACH,OAAOA,IAAMC,IALD,0CCyFDC,E,4MArFXC,MAAQ,CACJC,UAAW,GACXC,WAAW,G,EAOfC,aAAe,WACXC,IACGC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAER,UAAWK,EAAII,KAAKC,UACpC,EAAKC,uBAERC,OAAM,SAAAC,GAAG,OAAIP,QAAQC,IAAIM,O,EAGhCF,kBAAoB,WAChBL,QAAQC,IAAI,WACZD,QAAQC,IAAI,EAAKR,MAAME,YACM,IAAzB,EAAKF,MAAME,UACf,EAAKO,SAAS,CACVR,UAAW,EAAKD,MAAMC,UAAUc,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,MAAS,EAAMF,EAAEC,KAAKC,MAAQH,EAAEE,KAAKC,OAAU,EAAI,KACxHjB,WAAW,IAGX,EAAKO,SAAS,CACVR,UAAW,EAAKD,MAAMC,UAAUc,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,MAAS,EAAMF,EAAEC,KAAKC,MAAQH,EAAEE,KAAKC,OAAU,EAAI,KACxHjB,WAAW,K,EAKvBkB,mBAAqB,a,EAIrBC,mBAAqB,a,kEAjCjBC,KAAKnB,iB,+BAsCL,OACI,8BACI,eAACoB,EAAA,EAAD,CAAWC,MAAO,CAACC,gBAAiB,SAApC,UACI,eAACC,EAAA,EAAD,CAAKF,MAAO,CAACG,UAAW,SAAUC,WAAY,OAA9C,UACA,cAACC,EAAA,EAAD,UACI,iCAAQ,2CAEZ,cAACA,EAAA,EAAD,UACI,wBAAQC,QAAWR,KAAKV,kBAAxB,oBAEJ,cAACiB,EAAA,EAAD,UACI,iCAAQ,+CAEZ,cAACA,EAAA,EAAD,UACI,iCAAQ,kDAIRP,KAAKtB,MAAMC,UAAU8B,KAAI,SAAAC,GAAQ,OACjC,eAACN,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UACA,qBAAKI,IAAKD,EAASE,QAAQC,UAAWC,IAAK,YAE3C,cAACP,EAAA,EAAD,UACJ,iCAAQ,6BAAKG,EAASd,KAAKC,YAEvB,cAACU,EAAA,EAAD,UACJ,iCAAQ,6BAAKG,EAASK,WAElB,cAACR,EAAA,EAAD,UACJ,iCAAQ,6BAAKG,EAASM,cAXVN,EAASK,kB,GAlElBE,IAAMC,WCoBlBC,E,uKAbX,OAAQ,gCACN,oBAAIjB,MAAS,CAACC,gBAAiB,OAAQiB,MAAO,QAASC,WAAY,OAAQhB,UAAW,UAAtF,gCACA,uBACA,uBACA,uBACA,cAAC,EAAD,W,GAZYa,a,MCClBI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9103d7d3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?results=10\";\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\nexport default {\n  get: function() {\n    return axios.get(BASEURL);\n  }\n};","import React from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport API from \"../utils/API\";\nclass EmployeeList extends React.Component {\n\n    //true means A first DSC\n    state = {\n        employees: [],\n        orderBool: true\n    }\n\n    componentDidMount() {\n        this.getEmployees();\n    }\n\n    getEmployees = () => {\n        API.get()\n          .then(res => {\n              console.log(res);\n              this.setState({ employees: res.data.results })\n              this.sortEmployeesName()\n          })\n          .catch(err => console.log(err));\n      };\n\n    sortEmployeesName = () => {\n        console.log(\"clicked\");\n        console.log(this.state.orderBool);\n        if (this.state.orderBool === true) {\n        this.setState({\n            employees: this.state.employees.sort((a,b) => (a.name.first > b.name.first) ? 1 : ((b.name.first > a.name.first) ? -1 : 0)),\n            orderBool: false\n        });\n        } else {\n            this.setState({\n                employees: this.state.employees.sort((a,b) => (a.name.first < b.name.first) ? 1 : ((b.name.first < a.name.first) ? -1 : 0)),\n                orderBool: true\n            });\n        }\n    }\n\n    sortEmployeesPhone = () => {\n\n    }\n\n    sortEmployeesEmail = () => {\n\n    }\n\n    render(){\n        return(\n            <div>\n                <Container style={{backgroundColor: \"white\"}}>\n                    <Row style={{textAlign: \"center\", paddingTop: \"5px\"}}>\n                    <Col>\n                        <strong><h4>Image</h4></strong>\n                    </Col>\n                    <Col>\n                        <button onClick = {this.sortEmployeesName}>Name</button>\n                    </Col>\n                    <Col>\n                        <strong><button>Phone</button></strong>\n                    </Col>\n                    <Col>\n                        <strong><button>Email</button></strong> \n                    </Col>\n                    </Row>\n                    {\n                        this.state.employees.map(employee => (\n                        <Row key = {employee.cell}>\n                            <Col>\n                            <img src={employee.picture.thumbnail} alt =\"image\"/>\n                            </Col>\n                            <Col>\n                        <strong><h4>{employee.name.first}</h4></strong>\n                            </Col>\n                            <Col>\n                        <strong><h4>{employee.cell}</h4></strong>\n                            </Col>\n                            <Col>\n                        <strong><h4>{employee.email}</h4></strong> \n                            </Col>\n                        </Row>\n                        ))\n                    }\n                </Container>\n            </div>\n        );\n    };\n}\n\nexport default EmployeeList;","import React, { Component } from \"react\";\nimport EmployeeList from \"./components/EmployeeList\"\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  // state = {\n  // };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (<div>\n      <h1 style = {{backgroundColor: \"navy\", color: \"white\", lineHeight: \"150%\", textAlign: \"center\"}}>Employee Directory</h1>\n      <br></br>\n      <br></br>\n      <br></br>\n      <EmployeeList />\n      </div>\n    );\n      \n  \n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}